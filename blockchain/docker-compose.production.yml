
version: '3.8'

services:
  veegoxchain-node1:
    build: 
      context: .
      dockerfile: Dockerfile.production
    container_name: veegoxchain-node1
    restart: unless-stopped
    ports:
      - "${NODE1_RPC_PORT:-8545}:8545"
      - "${NODE1_GRPC_PORT:-9632}:9632"
      - "${NODE1_P2P_PORT:-10000}:10000"
    volumes:
      - veegoxchain_node1_data:/chain/nodes/node1
      - ./genesis.json:/chain/genesis.json:ro
    environment:
      - NODE_ID=1
      - CHAIN_ID=${CHAIN_ID:-1999}
      - BLOCK_GAS_LIMIT=${BLOCK_GAS_LIMIT:-30000000}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - veegoxchain

  veegoxchain-node2:
    build: 
      context: .
      dockerfile: Dockerfile.production
    container_name: veegoxchain-node2
    restart: unless-stopped
    ports:
      - "${NODE2_RPC_PORT:-8546}:8545"
      - "${NODE2_GRPC_PORT:-9633}:9632"
      - "${NODE2_P2P_PORT:-10001}:10000"
    volumes:
      - veegoxchain_node2_data:/chain/nodes/node2
      - ./genesis.json:/chain/genesis.json:ro
    environment:
      - NODE_ID=2
      - CHAIN_ID=${CHAIN_ID:-1999}
      - BLOCK_GAS_LIMIT=${BLOCK_GAS_LIMIT:-30000000}
    depends_on:
      - veegoxchain-node1
    networks:
      - veegoxchain

  veegoxchain-node3:
    build: 
      context: .
      dockerfile: Dockerfile.production
    container_name: veegoxchain-node3
    restart: unless-stopped
    ports:
      - "${NODE3_RPC_PORT:-8547}:8545"
      - "${NODE3_GRPC_PORT:-9634}:9632"
      - "${NODE3_P2P_PORT:-10002}:10000"
    volumes:
      - veegoxchain_node3_data:/chain/nodes/node3
      - ./genesis.json:/chain/genesis.json:ro
    environment:
      - NODE_ID=3
      - CHAIN_ID=${CHAIN_ID:-1999}
      - BLOCK_GAS_LIMIT=${BLOCK_GAS_LIMIT:-30000000}
    depends_on:
      - veegoxchain-node1
    networks:
      - veegoxchain

  prometheus:
    image: prom/prometheus:latest
    container_name: veegoxchain-prometheus
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - veegoxchain

  grafana:
    image: grafana/grafana:latest
    container_name: veegoxchain-grafana
    restart: unless-stopped
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    depends_on:
      - prometheus
    networks:
      - veegoxchain

volumes:
  veegoxchain_node1_data:
  veegoxchain_node2_data:
  veegoxchain_node3_data:
  prometheus_data:
  grafana_data:

networks:
  veegoxchain:
    driver: bridge
